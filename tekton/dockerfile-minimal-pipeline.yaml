apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dockerfile-minimal
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: git-url
    description: url of the git repo for the code of deployment
    default: https://github.com/tekton-autogov/quickstarts.git
    type: string
  - name: git-revision
    description: revision to be used from repo of the code for deployment
    default: main
    type: string
  - name: IMAGE
    description: image to be build from the code
    default: image-registry.openshift-image-registry.svc:5000/pipelines/dockerfile-image
    type: string
  - name: DOCKERFILE
    description: Path to the Dockerfile to build.
    default: dockerfile-quickstart/Dockerfile
    type: string
  - description: Path to the directory to use as context.
    name: CONTEXT
    type: string
    default: dockerfile-quickstart/
  - name: helm_charts_dir
    description: The directory inside the git repository that contains the helm charts
    default: dockerfile-quickstart/helm/
    type: string
  - name: helm_release_name
    description: The helm release name
    default: dockerfile-release
    type: string
  - name: helm_release_version
    description: The helm release version in semantic versioning format
    default: v1.0.0
    type: string
  - name: TLSVERIFY
    description: Whether buildah should use TLS verification for interacting with container registries
    default: "true"
    type: string
  tasks:
  - name: git-clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: $(params.git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "false"
    - name: revision
      value: $(params.git-revision)
  - name: build-image
    taskRef:
      name: buildah
      kind: ClusterTask
    params:
    - name: IMAGE
      value: $(params.IMAGE)
    - name: DOCKERFILE
      value: $(params.DOCKERFILE)
    - name: CONTEXT
      value: $(params.CONTEXT)
    - name: TLSVERIFY
      value: $(params.TLSVERIFY)
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - git-clone
  - name: deploy-dev
    taskRef:
      name: helm-upgrade-from-source
      kind: ClusterTask
    params:
    - name: charts_dir
      value: $(params.helm_charts_dir)
    - name: overwrite_values
      value: "image.tag=$(params.IMAGE)@$(tasks.build-image.results.IMAGE_DIGEST)"
    - name: release_version
      value: $(params.helm_release_version)
    - name: release_name
      value: $(params.helm_release_name)
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - build-image
  finally:
  - name: report
    taskRef:
      name: markdown-report
    params:
    - name: pipeline-param-git-url
      value: $(params.git-url)
    - name: pipeline-param-git-revision
      value: $(params.git-revision)
    - name: pipeline-param-IMAGE
      value: $(params.IMAGE)
    - name: pipeline-param-TLSVERIFY
      value: $(params.TLSVERIFY)
    - name: pipeline-param-deployment-name
      value: $(params.helm_release_name)

    - name: git-clone-params-url
      value: $(tasks.git-clone.params.url)
    - name: git-clone-params-subdirectory
      value: $(tasks.git-clone.params.subdirectory)
    - name: git-clone-params-revision
      value: $(tasks.git-clone.params.revision)
    - name: git-clone-results-commit
      value: $(tasks.git-clone.results.commit)
    - name: git-clone-results-url
      value: $(tasks.git-clone.results.url)

    - name: build-image-params-IMAGE
      value: $(tasks.build-image.params.IMAGE)
    - name: build-image-params-TLSVERIFY
      value: $(tasks.build-image.params.TLSVERIFY)
    - name: build-image-results-IMAGE_DIGEST
      value: $(tasks.build-image.results.IMAGE_DIGEST)

    - name: deploy-dev-params-charts_dir
      value: $(tasks.deploy-dev.params.charts-dir)
    - name: deploy-dev-params-overwrite_values
      value: $(tasks.deploy-dev.params.overwrite_values)

